import React, { useEffect, useContext, useState } from "react";
import { getFirebase } from "../firebase";
import { Redirect } from "react-router-dom";
import { UserContext } from "../App";
import styled from "styled-components";
import Input from "../forms/input";

const WishLink = styled.a``;

const WishCardWrapper = styled.div`
  border: solid 2px black;
  padding: 10px;
  margin-top: 10px;
`;

const WishCard = ({ wish }) => {
  let linkText = [];

  if (wish.links) {
    const numLinks = Object.keys(wish.links).length;

    for (var i = 0; i < numLinks; i++) {
      const [text, href] = Object.entries(wish.links)[i];
      linkText.push(
        <WishLink key={text} href={href}>
          {text}
        </WishLink>
      );
      if (i < numLinks - 1) linkText.push(", ");
    }
  }

  return (
    <WishCardWrapper>
      <strong>{wish.idea}</strong>
      {wish.notes !== "" && <p>{wish.notes}</p>}
    </WishCardWrapper>
  );
};

const WishCardsWrapper = styled.div`
  margin-top: 20px;
`;

const WishCards = ({ wishes }) => {
  if (Object.keys(wishes).length > 0) {
    return (
      <WishCardsWrapper>
        {Object.entries(wishes)
          .reverse()
          .map(([key, wish]) => (
            <WishCard key={key} wish={wish} />
          ))}
      </WishCardsWrapper>
    );
  } else {
    return <p>No wishes added yet!</p>;
  }
};

const Button = styled.button``;

const WishlistHeader = styled.div`
  display: flex;
  justify-content: space-between;
`;

const VIEWING = "viewing";
const EDITING = "editing";
const UPLOADING = "uploading";

const Notes = styled.textarea`
  width: 100%;
  lineheight: 2rem;
  verticalalign: middle;
  fontsize: 1rem;
  margin-top: 10px;
  padding: 0 0.38rem;
`;

const WishForm = ({ uid, setStatus }) => {
  const [idea, setIdea] = useState("");
  const [notes, setNotes] = useState("");

  useEffect(() => console.log(idea), [idea]);
  useEffect(() => console.log(notes), [notes]);

  const onClick = () => {
    console.log("create clicked");
    setStatus(UPLOADING);
    // push into /users/${uid}/data/wishRecipes
    getFirebase()
      .database()
      .ref(`/users/${uid}/data/wishRecipes`)
      .push({ idea, notes })
      .then(() => setStatus(VIEWING))
      .catch((err) => console.log("wish form submission error: ", err));
    // setStatus(VIEWING) when done
  };

  return (
    <WishCardWrapper>
      <Input
        type="text"
        id="idea"
        placeholder="What's your idea?"
        value={idea}
        onChange={(e) => setIdea(e.target.value)}
        required
      />
      <Notes
        id="notes"
        placeholder="Notes and [links](https://example.com)"
        value={notes}
        onChange={(e) => setNotes(e.target.value)}
      />
      <div style={{ textAlign: "right" }}>
        <Button onClick={onClick}>Create</Button>
      </div>
    </WishCardWrapper>
  );
};

const WishRecipes = () => {
  const [wishes, setWishes] = useState({});
  const { user, loadingUser, userData, loadingUserData } = useContext(
    UserContext
  );
  const [status, setStatus] = useState(VIEWING);

  useEffect(() => console.log("status: ", status), [status]);

  // Load all posts if userData is present
  useEffect(() => {
    if (
      !loadingUser &&
      !loadingUserData &&
      user &&
      userData &&
      userData.wishRecipes
    ) {
      // Keys can be discarded since they're generated by firebase
      setWishes(userData.wishRecipes);
    }
  }, [user, loadingUser, userData, loadingUserData]);

  // User auth and data loading underway
  if (loadingUser || loadingUserData) {
    return <h1>Loading...</h1>;
  }

  // User auth completed
  if (!user) {
    return <Redirect to="/" />;
  }

  const onClick = () => status === VIEWING && setStatus(EDITING);

  return (
    <>
      <WishlistHeader>
        <h1>Your recipe wish list</h1>
        <Button
          onClick={onClick}
          disabled={status === EDITING || status === UPLOADING}
        >
          Add wish
        </Button>
      </WishlistHeader>
      {status !== VIEWING && <WishForm uid={user.uid} setStatus={setStatus} />}
      <WishCards wishes={wishes} />
    </>
  );
};

export default WishRecipes;
